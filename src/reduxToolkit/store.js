import { configureStore } from "@reduxjs/toolkit";
import { combineReducers } from "redux";
import { persistReducer } from "redux-persist";
import storage from "redux-persist/lib/storage/session"; // sessionStorage (web)

import pBelFlowReducer from "./pBelSlices/pBelFlowSlice";
import pBelPaymentFlowReducer from "./pBelSlices/pBelPaymentFlowSlice";
import userReducer from "./userSlice";

const rootReducer = combineReducers({
  pBelFlow: pBelFlowReducer,
  pBelPaymentFlow: pBelPaymentFlowReducer,
  user: userReducer,
});

const persistConfig = {
  key: "TiendaBSERoot",
  storage,
};

const persistedReducer = persistReducer(persistConfig, rootReducer);

// middleware = [thunk, immutableStateInvariant, serializableStateInvariant] <-- Defaults development
// middleware = [thunk] <-- Defaults production
const store = configureStore({
  reducer: persistedReducer,
  devTools: process.env.REACT_APP_INCLUDE_DEVTOOLS === "yes",
  // Customization to avoid some annoying console errors generated by redux-persist.
  middleware: (getDefaultMiddleware) =>
    getDefaultMiddleware({
      serializableCheck: false,
    }),
});

export default store;
